rules_version = '2';
service cloud.firestore {
  match /databases/{database}/documents {
    // Users can read and write their own user document
    match /users/{userId} {
      allow read, write: if request.auth != null && request.auth.uid == userId;
    }
    
    // Rooms - only members can read/write
    match /rooms/{roomId} {
      allow read, write: if request.auth != null && 
        request.auth.uid in resource.data.members.keys();
      allow create: if request.auth != null && 
        request.auth.uid == request.resource.data.createdBy;
      
      // Room expenses - only room members can access
      match /expenses/{expenseId} {
        allow read, write: if request.auth != null && 
          request.auth.uid in get(/databases/$(database)/documents/rooms/$(roomId)).data.members.keys();
        allow create: if request.auth != null && 
          request.auth.uid in get(/databases/$(database)/documents/rooms/$(roomId)).data.members.keys();
      }
      
      // Room goals - only room members can access
      match /goals/{goalId} {
        allow read, write: if request.auth != null && 
          request.auth.uid in get(/databases/$(database)/documents/rooms/$(roomId)).data.members.keys();
        allow create: if request.auth != null && 
          request.auth.uid in get(/databases/$(database)/documents/rooms/$(roomId)).data.members.keys();
      }
      
      // Room tasks - only room members can access
      match /tasks/{taskId} {
        allow read, write: if request.auth != null && 
          request.auth.uid in get(/databases/$(database)/documents/rooms/$(roomId)).data.members.keys();
        allow create: if request.auth != null && 
          request.auth.uid in get(/databases/$(database)/documents/rooms/$(roomId)).data.members.keys();
      }
      
      // Room notes - only room members can access
      match /notes/{noteId} {
        allow read, write: if request.auth != null && 
          request.auth.uid in get(/databases/$(database)/documents/rooms/$(roomId)).data.members.keys();
        allow create: if request.auth != null && 
          request.auth.uid in get(/databases/$(database)/documents/rooms/$(roomId)).data.members.keys();
      }
    }
    
    // Personal goals - only owner can access
    match /personalGoals/{goalId} {
      allow read, write: if request.auth != null && 
        request.auth.uid == resource.data.userId;
      allow create: if request.auth != null && 
        request.auth.uid == request.resource.data.userId;
    }
    
    // Personal expenses - only owner can access
    match /personalExpenses/{expenseId} {
      allow read, write: if request.auth != null && 
        request.auth.uid == resource.data.userId;
      allow create: if request.auth != null && 
        request.auth.uid == request.resource.data.userId;
    }
    
    // Tasks - only assigned user or creator can access
    match /tasks/{taskId} {
      allow read, write: if request.auth != null && 
        (request.auth.uid == resource.data.assignedTo || 
         request.auth.uid == resource.data.createdBy);
      allow create: if request.auth != null && 
        request.auth.uid == request.resource.data.createdBy;
    }
    
    // Notifications - only recipient can read
    match /notifications/{notificationId} {
      allow read: if request.auth != null && 
        request.auth.uid == resource.data.userId;
      allow write: if false; // Only server can write notifications
    }
  }
}